pub const Font = struct {
    id: u8,
    advance: u32,
    descent: u32,
    gap: u32,
    unitsPerEm: u32,
    glyphAdvances: *[]const u16,

    pub fn getLineHeight(self: *const Font, fontSize: u16) u16 {
        return @intCast(fontSize * (self.advance + self.descent + self.gap) / self.unitsPerEm);
    }

    // distance between baseline and highest point
    pub fn getBaseline(self: *const Font, fontSize: u16) u16 {
        return @intCast(fontSize * self.advance / self.unitsPerEm);
    }

    pub fn getLineGap(self: *const Font, fontSize: u16) u16 {
        return @intCast(fontSize * self.gap / self.unitsPerEm);
    }
};

var advancesHelvetica: []const u16 = &[_]u16{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 569, 569, 727, 1139, 1139, 1821, 1366, 391, 682, 682, 797, 1196, 569, 682, 569, 569, 1139, 1139, 1139, 1139, 1139, 1139, 1139, 1139, 1139, 1139, 569, 569, 1196, 1196, 1196, 1139, 2079, 1366, 1366, 1479, 1479, 1366, 1251, 1593, 1479, 569, 1024, 1366, 1139, 1706, 1479, 1593, 1366, 1593, 1479, 1366, 1251, 1479, 1366, 1933, 1366, 1366, 1251, 569, 569, 569, 961, 1139, 682, 1139, 1139, 1024, 1139, 1139, 569, 1139, 1139, 455, 455, 1024, 455, 1706, 1139, 1139, 1139, 1139, 682, 1024, 569, 1139, 1024, 1479, 1024, 1024, 1024, 684, 532, 684, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 569, 682, 1139, 1139, 1139, 1139, 532, 1139, 682, 1509, 758, 1139, 1196, 682, 1509, 1131, 819, 1124, 682, 682, 682, 1180, 1100, 682, 682, 682, 748, 1139, 1708, 1708, 1708, 1251, 1366, 1366, 1366, 1366, 1366, 1366, 2048, 1479, 1366, 1366, 1366, 1366, 569, 569, 569, 569, 1479, 1479, 1593, 1593, 1593, 1593, 1593, 1196, 1593, 1479, 1479, 1479, 1479, 1366, 1366, 1251, 1139, 1139, 1139, 1139, 1139, 1139, 1821, 1024, 1139, 1139, 1139, 1139, 569, 569, 569, 569, 1139, 1139, 1139, 1139, 1139, 1139, 1139, 1124, 1251, 1139, 1139, 1139, 1139, 1024, 1139, 1024 };
var advancesHelveticaBold: []const u16 = &[_]u16{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 569, 682, 971, 1139, 1139, 1821, 1479, 487, 682, 682, 797, 1196, 569, 682, 569, 569, 1139, 1139, 1139, 1139, 1139, 1139, 1139, 1139, 1139, 1139, 682, 682, 1196, 1196, 1196, 1251, 1997, 1479, 1479, 1479, 1479, 1366, 1251, 1593, 1479, 569, 1139, 1479, 1251, 1706, 1479, 1593, 1366, 1593, 1479, 1366, 1251, 1479, 1366, 1933, 1366, 1366, 1251, 682, 569, 682, 1196, 1139, 682, 1139, 1251, 1139, 1251, 1139, 682, 1251, 1251, 569, 569, 1139, 569, 1821, 1251, 1251, 1251, 1251, 797, 1139, 682, 1251, 1139, 1593, 1139, 1139, 1024, 797, 573, 797, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 569, 682, 1139, 1139, 1139, 1139, 573, 1139, 682, 1509, 758, 1139, 1196, 682, 1509, 1131, 819, 1124, 682, 682, 682, 1180, 1139, 682, 682, 682, 748, 1139, 1708, 1708, 1708, 1251, 1479, 1479, 1479, 1479, 1479, 1479, 2048, 1479, 1366, 1366, 1366, 1366, 569, 569, 569, 569, 1479, 1479, 1593, 1593, 1593, 1593, 1593, 1196, 1593, 1479, 1479, 1479, 1479, 1366, 1366, 1251, 1139, 1139, 1139, 1139, 1139, 1139, 1821, 1139, 1139, 1139, 1139, 1139, 569, 569, 569, 569, 1251, 1251, 1251, 1251, 1251, 1251, 1251, 1124, 1251, 1251, 1251, 1251, 1251, 1139, 1251, 1139 };

pub const PredefinedFonts = struct {
    pub const helveticaRegular: u8 = 1;
    pub const helveticaBold: u8 = 2;
};

pub const predefinedFonts: [2]Font = [2]Font{
    .{
        .id = 1,
        .advance = 1854,
        .descent = 434,
        .gap = 67,
        .unitsPerEm = 2048,
        .glyphAdvances = &advancesHelvetica,
    },

    .{
        .id = 2,
        .advance = 1854,
        .descent = 434,
        .gap = 67,
        .unitsPerEm = 2048,
        .glyphAdvances = &advancesHelveticaBold,
    },
};
